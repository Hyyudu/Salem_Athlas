Общее правило для всех CSV: в них НЕЛЬЗЯ применять перенос строки, точку с запятой (;) и кавычки ("). Если нужно вставить в текст точку с запятой, пишем вместо нее {semi}, вместо кавычек {quot}, вместо переноса строки <br>. Например: "Как говорит наш старик, {quot}Дорог виски ко дню рождения!{quot}", или "Деньги от тебя получил{semi} кстати, не собираешься ли к нам в гости?", или "Привет, Ник!<br>Подгони-ка мне своих клевых патронов!".

Для того, чтобы увидеть внешний вид телеграмм, надо в папке Cards запустить gen.py (требуется, чтобы на компьютере был установлен Python, если нет, рядом лежит установщик python-2.7.6.amd64.msi, если у тебя Windows 32-битная, скажи мне, найду другой). После этого в папке results надо открыть telegrams.htm. Там последовательно идут телеграммы: кладовщикам, консильери, курьерам, подгонялам.

Телеграммы, отсылаемые экономическими акторами (игроками) своим виртуальным контактам (родственникам, друзьям и т.д.) лежат в папке content в файлах:
telegram.supply.csv - подгонялам
telegram.courier.csv - курьерам
telegram.delivery.csv - кладовщикам
telegram.bosses.csv - консильери от боссов

Общие столбцы для всех телеграмм:
print - сколько экземпляров таких телеграмм печатать (0 - телеграмма не печатается)
role_id - идентификатор роли, число. Для некоторых акторов жестко связана с персонажем (именно у меня, Джима, есть дядя Джон в деревне, и именно для меня он делает виски), для некоторых привязана к должности (именно шерифу какая-то госконтора подгоняет патроны, и им все равно, является ли шерифом Билл, Майк или Хью). На это можешь не заморачиваться, Деметриус потом пропишет. Можешь пока оставлять как есть.
character name - имя персонажа. По историческим причинам и для антуража пишется по-английски. Я уже заполнил для всех, о ком есть мастерская инфа.
contact_address - адрес контакта, т.е. виртуального родственника. Хорошо бы это скореллировать с книгой игрока (т.е. если Джон Смит прибыл из Хартфорда, очень вероятно, что его дядя живет в Хартфорде), квентой и типом контакта (очевидно, что консильери мафии живет в Бостоне, а деревенский дядя-подгоняла - где-нибудь в пригороде, каком-нибудь Brooksby-Farm). Адрес пишется с точностью до улицы, номер дома всегда равен role_id. Так что если игрок с role_id = 15 будет писать контакту с адресом Summer street, Lynnfield, то на телеграмме будет адрес 15, Summer street, Lynnfield. Это сделано для облегчения жизни игротехам на почте. Помним, что в Америке адреса пишутся по восходящей (номер дома, улица, город, аббревиатура штата), т.е. иначе, чем в России. Аббревиатура штата у нас везде МА (Массачусеттс) и подставляется автоматически, в адрес ее вписывать не надо.
contact_name - имя контакта. Соображения те же, что и для предыдущей колонки. Т.е. если контакт - папа персонажа, для него очень логично иметь ту же фамилию, что и персонаж.

Теперь частные поля для конкретных телеграмм
telegramm.supply.csv:
	good_type - тип товара, который поставляет этот подгоняла. Возможны три варианта: ammo (патроны), cigars (сигары) и whiskey (виски)
	max_crates - сколько ящиков он подгоняет
	text - сам по себе текст телеграммы от игрока контакту
	reply - начало ответного письма (отчета) от контакта игроку. Пишется в любом случае (вне зависимости от того, насколько удачно сработал подгоняла)
	full - текст ответного письма, который подгоняла пишет в том случае, когда курьер полностью взял всю переданную партию.
	partial - текст ответного письма, который подгоняла пишет в том случае, когда курьер взял часть партии
	fail - текст ответного письма, который подгоняла пишет в том случае, когда курьер не приехал к подгоняле
	В колонках reply, full, partial и fail можно использовать следующие автозамены: {created} - сколько ящиков товара создал подгоняла (обычно равно max_crates), {passed} - сколько он смог передать курьеру. Для правильного согласования падежей и чисел можно использовать конструкцию вида {passed:ящик:ящика:ящиков} - тут первый элемент - это какое число надо вывести, второй - существительное, если количество равно 1 (1 ящик), второй - если количество 2-4 (2, 3, 4 ящика), третий - остальные варианты (5, 6 и т.д. ящиков). Т.е. можно свободно вставлять в текст фразы вроде "Я тут для тебя сделал {created:ящик:ящика:ящиков} отличнейшего виски" или "думаю, ты будешь рад {passed:ящику:ящикам:ящикам} сигар"
	
telegram.courier.csv
	courier_id - номер курьера.
	location - куда приходит курьер (ravine - овраг, oldroad - старая дорога, pier - причал, barrier - шлагбаум)
	phase - в какую половину часа приезжает курьер (1 или 2)
	crates - сколько ящиков может довезти за раз
	price1 - сколько берет, если едет в одно место (недоступно для курьеров со вместимостью 1 и 2, они всегда ездят повсюду)
	price2 - сколько берет, если едет в несколько мест
	text - текст телеграммы, которую игрок пишет курьеру
	Там еще будут поля для отчета курьера игроку, их добавим чуть позже (пока я не успел в связи с изменением механизма курьеров)
	
telegram.delivery.csv
	Тут помним, что contact_address должен быть адресом Салема, поскольку все склады у нас физически находятся в Салеме. А сам по себе контакт - это скорее всего подчиненный игрока. Берется из stores.csv (т.е. если письма бегункам пишет кладовщик прачечной Джеймс Рурк, то и приказ от игрока кладовщику прачечной должен идти на имя Джеймса Рурка).  Когда я писал текстовые тексты, я не учел это, поэтому то, что сейчас там в csv-файле - это неудачные примеры ("Будь здорова, сеструха!<br>Передай па, что ему опять придется погонять свой старенький фургон!")
	store_id - номер склада (1-6)
	trucks - сколько у склада есть грузовиков (соответственно, сколько ящиков он может перегнать за цикл)
	price - цена прогона одного грузовика
	text - текст письма игрока кладовщику.
	
telegram.bosses.csv
	Тут никаких индивидуальных текстов нет, все мафиози пишут свои телеграммы под копирку.
	
Теперь другие csv, которые тоже неплохо бы индивидуализировать (раз они относятся к экономике)
officials.csv - файл чиновников, которым мафия сует взятки. Этот файл мы меняем руками каждый цикл
	official_id - номер чиновника. Все чиновники с нечетными номерами - "шишки", все с четными - "сошки"
	name - имя и должность/звание/титул чиновника
	department - из какого отдела чиновник
	available - будет ли он доступен в следующий экономический цикл (1 - да, 0 - нет). 
	price - размер взятки, которую можно дать чиновнику (не имеет смысла, если available = 0)
	event - событие, которое произошло с чиновником и о котором консильери уведомляет босса письмом. В тексте можно использовать автозамену {dep} - она заменяется на слова "из отдела" и название департамента
	bribe_text - текст, описывающий взятку. Например, если у полковника Уошберна в event написано, что у него родился внук, то bribe_text может для него быть вида "Подарить полковнику Уошберну на день рождения внука {price}". {price} - автозаменяется на сумму взятки (например, "500$")
	
stores.csv - открытые письма, которые рассылает виртуальный кладовщик бегункам
	store_id - номер склада (совпадает с соответствующим store_id из telegram.delivery.csv)
	store_name - название склада
	cars - сколько у него грузовиков
	contact_name - имя кладовщика
	text - сам текст письма. Еще раз: это письмо от виртуального кладовщика (игротеха) игрокам (бегункам). В тексте используются автозамены: {cycle} - время цикла (например, "пятница, 14 часов"), {locations} - точки, в которых он будет торчать, {badge} - картинка со значком склада (находятся в папке images/badges.
	

ОТЧЕТЫ КОНСИЛЬЕРИ
Находятся в папке templates, называются report.italy.htm, report.jews.htm и т.д. Правятся любым текстовым редактором (Блокнотом и т.д.)
Там доступны следующие автозамены (все, традиционно, в фигурных скобках {} ):
ammo, whiskey, cigars - сколько в нашей сети за этот цикл продали ящиков патронов, виски и сигар
ammo_total, whiskey_total, cigars_total - сколько продали всего во всех сетях (исключая университетскую)
outcome - суммарный доход с продажи товаров (без учета штрафов после облав)
profit - чистый доход за цикл (после вычета штрафов)
officials_text - новости про чиновников (пишется в конце письма)
Так же, как и везде, можно использовать конструкцию с согласованием числительных: "{ammo_total:ящик:ящика:ящиков} маслят"

Кроме того, в тексте могут встретиться обозначения следующего вида:
 <span class=ammo_raid_0>Не знаю, благодарить ли Провидение или капитана Блэкуотера, придержавшего своих орлов, но оружие в этот раз никто не искал.</span>
 <span class=ammo_raid_1>Копы рыли землю носом и искали оружие, но, как ты понимаешь, на этот раз это нас не волновало.</span>
 <span class=ammo_raid_2>В этот раз случилась очередная облава, искали контрабандное оружие, но наши ребята хорошо умеют прятать следы, и все обошлось.</span>
 <span class=ammo_raid_3>Увы, Фортуна в этот раз повернулась к нам филейной частью, и наши прекрасные схемы торговли оружием дали сбой - копы вышли на нас!</span>
 По умолчанию все эти спаны в итоговом тексте невидимы, кроме нескольких по условию.
 ammo_raid_0 станет видимым тогда и только тогда, когда по патронам не было облавы.
 ammo_raid_1 станет видимым тогда и только тогда, когда по патронам была облава, но в нашей сети они не продавались.
 ammo_raid_2 - по патронам была облава, мы продавали патроны, но не попались
 ammo_raid_3 - по патронам была облава, мы продавали патроны и попались.
 Аналогичным образом делаются видимыми спаны по остальным товарам (whiskey_raid_0, whiskey_raid_1, whiskey_raid_2, whiskey_raid_3, cigars_raid_0, cigars_raid_1,cigars_raid_2, cigars_raid_3)
 Спан problems_none виден в том случае, если мы не попались ни под одну облаву. problems_black - когда мы попались под облаву и получаем черный камень. Необходимо помнить, что говносеть не получает черные камни никогда, и это надо в problems_black отразить (что-то вроде "копы во время облавы поймали Хромого Джо - хорошо, что этот идиот знает только своего непосредственного шефа и не может вывести копов на вас, босс!")
 
 Крайне не рекомендуется вкладывать один спан в другой, но можно как угодно размещать спаны, в том числе делать несколько спанов одного класса.